# -*- coding: utf-8 -*-

# Macro Begin: /home/amcintosh/Documents/FreeCAD/tests/Macro/test-pipe-3.FCMacro +++++++++++++++++++++++++++++++++++++++++++++++++
import FreeCAD
import PartDesign
import PartDesignGui
import Sketcher

App.newDocument("Unnamed")
#App.setActiveDocument("Unnamed")
#App.ActiveDocument=App.getDocument("Unnamed")
#Gui.ActiveDocument=Gui.getDocument("Unnamed")
#Gui.activeDocument().activeView().viewDefaultOrientation()
#Gui.activateWorkbench("PartDesignWorkbench")
App.activeDocument().addObject('PartDesign::Body','Body')
#Gui.activateView('Gui::View3DInventor', True)
#Gui.activeView().setActiveObject('pdbody', App.activeDocument().Body)
App.ActiveDocument.addObject('PartDesign::AdditiveBox','Box')
App.ActiveDocument.Body.addObject(App.activeDocument().Box)
App.ActiveDocument.recompute()
#Gui.ActiveDocument.Box.ShapeColor=Gui.ActiveDocument.Body.ShapeColor
#Gui.ActiveDocument.Box.LineColor=Gui.ActiveDocument.Body.LineColor
#Gui.ActiveDocument.Box.PointColor=Gui.ActiveDocument.Body.PointColor
#Gui.ActiveDocument.Box.Transparency=Gui.ActiveDocument.Body.Transparency
#Gui.ActiveDocument.Box.DisplayMode=Gui.ActiveDocument.Body.DisplayMode
#Gui.activeDocument().setEdit('Box')
App.ActiveDocument.Box.Length=152.400
App.ActiveDocument.Box.Width=152.400
App.ActiveDocument.Box.Height=152.400

App.ActiveDocument.recompute()
App.ActiveDocument.recompute()
#Gui.activeDocument().resetEdit()
#Gui.SendMsgToActiveView("ViewFit")
#Gui.activeDocument().activeView().viewIsometric()
App.activeDocument().Body.newObject('Sketcher::SketchObject','Sketch')
App.activeDocument().Sketch.Support = (App.activeDocument().XZ_Plane, [''])
App.activeDocument().Sketch.MapMode = 'FlatFace'
App.ActiveDocument.recompute()
#Gui.activeDocument().setEdit('Sketch')
#Gui.activateWorkbench('SketcherWorkbench')
#ActiveSketch = App.ActiveDocument.getObject('Sketch')
#tv = Show.TempoVis(App.ActiveDocument)
#if ActiveSketch.ViewObject.HideDependent:
#  objs = tv.get_all_dependent(ActiveSketch)
#  objs = filter(lambda x: not x.TypeId.startswith("TechDraw::"), objs)
#  objs = filter(lambda x: not x.TypeId.startswith("Drawing::"), objs)
#  tv.hide(objs)
#if ActiveSketch.ViewObject.ShowSupport:
#  tv.show([ref[0] for ref in ActiveSketch.Support if not ref[0].isDerivedFrom("PartDesign::Plane")])
#if ActiveSketch.ViewObject.ShowLinks:
#  tv.show([ref[0] for ref in ActiveSketch.ExternalGeometry])
#tv.hide(ActiveSketch)
#ActiveSketch.ViewObject.TempoVis = tv
#del(tv)
#
#ActiveSketch = App.ActiveDocument.getObject('Sketch')
#if ActiveSketch.ViewObject.RestoreCamera:
#  ActiveSketch.ViewObject.TempoVis.saveCamera()
#
App.ActiveDocument.Sketch.addGeometry(Part.LineSegment(App.Vector(-15.875000,23.775909,0),App.Vector(168.275000,77.517197,0)),False)
App.ActiveDocument.recompute()
#Gui.getDocument('Unnamed').resetEdit()
#ActiveSketch = App.ActiveDocument.getObject('Sketch')
#tv = ActiveSketch.ViewObject.TempoVis
#if tv:
#  tv.restore()
#ActiveSketch.ViewObject.TempoVis = None
#del(tv)
#
#Gui.activateWorkbench('PartDesignWorkbench')
App.getDocument('Unnamed').recompute()
App.activeDocument().Body.newObject('PartDesign::Plane','DatumPlane')
App.activeDocument().DatumPlane.Support = [(App.getDocument('Unnamed').Sketch,'Edge1')]
App.activeDocument().DatumPlane.MapMode = 'NormalToEdge'
App.activeDocument().recompute()
#Gui.activeDocument().setEdit('DatumPlane')
App.ActiveDocument.DatumPlane.MapReversed = False
App.ActiveDocument.DatumPlane.Support = [(App.getDocument('Unnamed').Sketch,'Edge1')]
App.ActiveDocument.DatumPlane.MapMode = 'NormalToEdge'
App.ActiveDocument.recompute()
#Gui.ActiveDocument.resetEdit()
App.activeDocument().Body.newObject('Sketcher::SketchObject','Sketch001')
App.activeDocument().Sketch001.Support = (App.activeDocument().DatumPlane, [''])
App.activeDocument().Sketch001.MapMode = 'FlatFace'
App.ActiveDocument.recompute()
#Gui.activeDocument().setEdit('Sketch001')
#Gui.activateWorkbench('SketcherWorkbench')
#ActiveSketch = App.ActiveDocument.getObject('Sketch001')
#tv = Show.TempoVis(App.ActiveDocument)
#if ActiveSketch.ViewObject.HideDependent:
#  objs = tv.get_all_dependent(ActiveSketch)
#  objs = filter(lambda x: not x.TypeId.startswith("TechDraw::"), objs)
#  objs = filter(lambda x: not x.TypeId.startswith("Drawing::"), objs)
#  tv.hide(objs)
#if ActiveSketch.ViewObject.ShowSupport:
#  tv.show([ref[0] for ref in ActiveSketch.Support if not ref[0].isDerivedFrom("PartDesign::Plane")])
#if ActiveSketch.ViewObject.ShowLinks:
#  tv.show([ref[0] for ref in ActiveSketch.ExternalGeometry])
#tv.hide(ActiveSketch)
#ActiveSketch.ViewObject.TempoVis = tv
#del(tv)
#
#ActiveSketch = App.ActiveDocument.getObject('Sketch001')
#if ActiveSketch.ViewObject.RestoreCamera:
#  ActiveSketch.ViewObject.TempoVis.saveCamera()
#
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(20.745070,19.050000,0),App.Vector(-19.824327,22.225000,0)),False)
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-19.824327,22.225000,0),App.Vector(-32.996220,59.567414,0)),False)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',1,1,0,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-32.996220,59.567407,0),App.Vector(-48.802483,12.700000,0)),False)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',2,1,1,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-48.802483,12.700000,0),App.Vector(-81.468735,-10.507010,0)),False)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',3,1,2,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-81.468735,-10.507010,0),App.Vector(-43.006855,-14.722010,0)),False)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',4,1,3,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-43.006855,-14.722009,0),App.Vector(-22.225000,-38.100000,0)),False)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',5,1,4,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-22.225000,-38.100000,0),App.Vector(-16.663073,-3.175000,0)),False)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',6,1,5,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-16.663073,-3.175000,0),App.Vector(20.745070,19.050000,0)),False)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',7,1,6,2)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',7,2,0,1)) 
App.ActiveDocument.recompute()
#Gui.getDocument('Unnamed').resetEdit()
#ActiveSketch = App.ActiveDocument.getObject('Sketch001')
#tv = ActiveSketch.ViewObject.TempoVis
#if tv:
#  tv.restore()
#ActiveSketch.ViewObject.TempoVis = None
#del(tv)
#
#Gui.activateWorkbench('PartDesignWorkbench')
App.getDocument('Unnamed').recompute()
App.activeDocument().Body.newObject("PartDesign::SubtractivePipe","SubtractivePipe")
App.activeDocument().SubtractivePipe.Profile = App.activeDocument().Sketch001
App.ActiveDocument.recompute()
#Gui.activeDocument().hide("Sketch001")
App.ActiveDocument.recompute()
#Gui.ActiveDocument.SubtractivePipe.ShapeColor=Gui.ActiveDocument.Body.ShapeColor
#Gui.ActiveDocument.SubtractivePipe.LineColor=Gui.ActiveDocument.Body.LineColor
#Gui.ActiveDocument.SubtractivePipe.PointColor=Gui.ActiveDocument.Body.PointColor
#Gui.ActiveDocument.SubtractivePipe.Transparency=Gui.ActiveDocument.Body.Transparency
#Gui.ActiveDocument.SubtractivePipe.DisplayMode=Gui.ActiveDocument.Body.DisplayMode
#Gui.activeDocument().setEdit('SubtractivePipe', 0)
#Gui.Selection.clearSelection()
App.ActiveDocument.recompute()
#Gui.activeDocument().resetEdit()
#Gui.SendMsgToActiveView("Save")
App.getDocument("Unnamed").saveAs(u"/home/amcintosh/Documents/FreeCAD/Test/Documents/star-pipe.FCStd")
#Gui.activateWorkbench('SketcherWorkbench')
#ActiveSketch = App.ActiveDocument.getObject('Sketch')
#tv = Show.TempoVis(App.ActiveDocument)
#if ActiveSketch.ViewObject.HideDependent:
#  objs = tv.get_all_dependent(ActiveSketch)
#  objs = filter(lambda x: not x.TypeId.startswith("TechDraw::"), objs)
#  objs = filter(lambda x: not x.TypeId.startswith("Drawing::"), objs)
#  tv.hide(objs)
#if ActiveSketch.ViewObject.ShowSupport:
#  tv.show([ref[0] for ref in ActiveSketch.Support if not ref[0].isDerivedFrom("PartDesign::Plane")])
#if ActiveSketch.ViewObject.ShowLinks:
#  tv.show([ref[0] for ref in ActiveSketch.ExternalGeometry])
#tv.hide(ActiveSketch)
#ActiveSketch.ViewObject.TempoVis = tv
#del(tv)
#
#ActiveSketch = App.ActiveDocument.getObject('Sketch')
#if ActiveSketch.ViewObject.RestoreCamera:
#  ActiveSketch.ViewObject.TempoVis.saveCamera()
#
#ActiveSketch = App.ActiveDocument.getObject('Sketch')
#tv = ActiveSketch.ViewObject.TempoVis
#if tv:
#  tv.restore()
#ActiveSketch.ViewObject.TempoVis = None
#del(tv)
#
#Gui.activateWorkbench('PartDesignWorkbench')
#Gui.activateWorkbench('SketcherWorkbench')
#ActiveSketch = App.ActiveDocument.getObject('Sketch001')
#tv = Show.TempoVis(App.ActiveDocument)
#if ActiveSketch.ViewObject.HideDependent:
#  objs = tv.get_all_dependent(ActiveSketch)
#  objs = filter(lambda x: not x.TypeId.startswith("TechDraw::"), objs)
#  objs = filter(lambda x: not x.TypeId.startswith("Drawing::"), objs)
#  tv.hide(objs)
#if ActiveSketch.ViewObject.ShowSupport:
#  tv.show([ref[0] for ref in ActiveSketch.Support if not ref[0].isDerivedFrom("PartDesign::Plane")])
#if ActiveSketch.ViewObject.ShowLinks:
#  tv.show([ref[0] for ref in ActiveSketch.ExternalGeometry])
#tv.hide(ActiveSketch)
#ActiveSketch.ViewObject.TempoVis = tv
#del(tv)
#
#ActiveSketch = App.ActiveDocument.getObject('Sketch001')
#if ActiveSketch.ViewObject.RestoreCamera:
#  ActiveSketch.ViewObject.TempoVis.saveCamera()
#
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',1,2)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',2,3)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',3,4)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',4,5)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',5,6)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',6,7)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',7,0)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-38.100000,-12.027580,0),App.Vector(-59.532745,-44.450000,0)),False)
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-59.532745,-44.450000,0),App.Vector(-59.179554,-17.325207,0)),False)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Vertical',9)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-59.532745,-17.325207,0),App.Vector(-81.067802,-9.525000,0)),False)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',10,1,9,2)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',10,2,3,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.delGeometry(4)
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',4,7)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',7,8)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',8,9)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',7,2,8,1)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',4,1,7,1)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-23.814484,15.875000,0),App.Vector(-49.319481,17.309386,0)),True)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',10,1,0,2)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',10,2,2,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-49.319481,17.309386,0),App.Vector(-44.450000,-10.261702,0)),True)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',11,1,2,2)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',11,2,8,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-44.450000,-9.525000,0),App.Vector(-36.983673,-10.353237,0)),True)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',12,1,8,2)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',12,2,4,1)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-36.223175,-11.321230,0),App.Vector(-15.068540,-7.390996,0)),True)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',13,1,4,1)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',13,2,5,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-15.068540,-7.390994,0),App.Vector(-23.814484,15.875000,0)),True)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',14,1,5,2)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',14,2,0,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',14,10)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',10,11)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',11,12)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',12,13)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',11,10)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',10,14)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',13,14)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.movePoint(7,2,App.Vector(-75.425606,-43.813343,0),0)
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',12,11)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.movePoint(2,2,App.Vector(-88.900000,5.631178,0),0)
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.movePoint(0,2,App.Vector(-48.937466,10.928805,0),0)
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-123.825000,-11.387078,0),App.Vector(-32.608768,-19.050000,0)),True)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',15,1,3,2)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',15,2,5,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-88.174744,-66.675000,0),App.Vector(-48.691517,9.525000,0)),True)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',16,1,7,2)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',16,2,0,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',15,16)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-21.325745,-53.309155,0),App.Vector(-82.550000,5.007663,0)),True)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',17,1,4,2)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',17,2,2,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',16,17)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-13.694755,17.913145,0),App.Vector(-88.900000,-26.302923,0)),True)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',18,1,0,1)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',18,2,8,2)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',16,18)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addGeometry(Part.LineSegment(App.Vector(-77.508125,43.416944,0),App.Vector(-58.849907,-44.450000,0)),True)
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',19,1,1,2)) 
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Coincident',19,2,4,1)) 
App.ActiveDocument.recompute()
App.ActiveDocument.Sketch001.addConstraint(Sketcher.Constraint('Equal',19,17)) 
App.ActiveDocument.recompute()
#Gui.getDocument('Unnamed').resetEdit()
#ActiveSketch = App.ActiveDocument.getObject('Sketch001')
#tv = ActiveSketch.ViewObject.TempoVis
#if tv:
#  tv.restore()
#ActiveSketch.ViewObject.TempoVis = None
#del(tv)
#
#Gui.activateWorkbench('PartDesignWorkbench')
App.getDocument('Unnamed').recompute()
#Gui.activeDocument().activeView().viewIsometric()
#Gui.activeDocument().activeView().viewTop()
#Gui.activeDocument().activeView().viewRight()
#Gui.activeDocument().activeView().viewRear()
#Gui.activeDocument().activeView().viewBottom()
#Gui.activeDocument().activeView().viewLeft()
#Gui.activeDocument().activeView().viewIsometric()
#Gui.SendMsgToActiveView("Save")
App.getDocument("Unnamed").save()
# Macro End: /home/amcintosh/Documents/FreeCAD/tests/Macro/test-pipe-3.FCMacro +++++++++++++++++++++++++++++++++++++++++++++++++
